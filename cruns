#!/usr/bin/perl -w

# The MIT License
#
# Copyright (c) 2014 Adrian Tan <atks@umich.edu>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

use strict;
use warnings;

my $usr = @ARGV==1 ? $ARGV[0] : "atks";

my $host = `hostname`;
my @gateways = ();
if ($host =~ /(fantasia|wonderland|snowhite)/)
{
    @gateways = ("fantasia", "wonderland", "snowwhite", "slurm");
}
else
{
    push(@gateways, $host);
}

my %TNODE = ();
open(IN, "/net/fantasia/home/atks/programs/cluster/good_node_list.txt");
while(<IN>)
{
    chomp;
    my ($node, $newNode) = split("\t");
    $TNODE{$newNode} = $node;
}
close(IN);

my %LOG = ();
my %ULOG = ();
my $total = 0;
my $userTotal = 0;
for my $gateway (@gateways)
{
    my $cmd;
    if ($gateway =~ /(fantasia|wonderland|snowwhite)/)
    {
        if ($host eq $gateway)
        {
            $cmd = "mosps -eu | tail -n +2"
        }
        else
        {
            $cmd = "ssh $usr@" . $gateway . " 'mosps -eu | tail -n +2'";
        }
    }
    elsif ($gateway eq "slurm")
    {
        $cmd = "squeue | tail -n +2 | tr -s ' ' '\\t'  | cut -f2,5,9 | perl -lane '{print \"\$F[1]\\t\$F[0]\\t\$F[2]\"}'";
    }
    else
    {
        $cmd = "mosps -eu | tail -n +2"
    }

    my $c = `$cmd`;

    my @jobs = split("\n", $c);
    for my $job (@jobs)
    {
        my ($user, $pid, $node, $rest) = split(/\s+/, $job);
        next if ($node =~ /wait/);

        if ($gateway eq "slurm")
        {
            if (!exists($TNODE{$node}))
            {
                my $cmd1 = "ssh $usr\@" . "fantasia \"mosctl whois $node\"";
                print $cmd1 . "\n";
                my $newNode = `$cmd1`;
                $TNODE{$node} = $newNode;
                $node = $newNode;
            }
            else
            {
                $node = $TNODE{$node};
            }
        }

        if (!exists($LOG{$node}))
        {
            $LOG{$node} = 0;
            $ULOG{$node} = 0;
        }

        if ($user eq $usr)
        {
            ++$ULOG{$node};
            ++$userTotal;
        }

        ++$LOG{$node};
        ++$total;
    }
}

$host =~ s/^\s+//;
$host =~ s/\s+$//;

print "\n\t$host\n";
print "\t" . ("=" x length($host)) . "\n";
if ($host =~ /(fantasia|wonderland|snowwhite)/)
{
    print "\tnode  usr(sum)  node  usr(sum)  node  usr(sum) \n";
    my $i = 0;
    for my $node (sort {$LOG{$b} <=> $LOG{$a}} keys(%LOG))
    {
        print "\n" if ($i!=0 && $i%3==0);
        printf("\t%4s  %3d(%3d)", $node, $ULOG{$node}, $LOG{$node});

        ++$i;
    }
    print "\n\n";
    printf("\t $usr: %4d jobs\n", $userTotal);
    printf("\ttotal: %4d jobs\n\n", $total);
}
else
{
    print "\tnode  usr(sum)\n";
    for my $node (sort {$a <=> $b} keys(%LOG))
    {
        printf("\t%4s  %3d(%3d)\n", $node, $ULOG{$node}, $LOG{$node});
    }
    print "\n";
    printf("\t $usr: %4d jobs\n", $userTotal);
    printf("\ttotal: %4d jobs\n\n", $total);
}
